/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.gruposistemasdistribuidos.practicasd2.gui;

import com.flickr4java.flickr.FlickrException;
import com.flickr4java.flickr.RequestContext;
import com.flickr4java.flickr.groups.Group;
import es.gruposistemasdistribuidos.practicasd2.src.MetaData;
import es.gruposistemasdistribuidos.practicasd2.src.Sesion;
import es.gruposistemasdistribuidos.practicasd2.src.Sesion.UploadTask;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ProgressMonitor;

/**
 *
 * @author S.Valeror
 */
public class PracticaSD2GUI extends javax.swing.JFrame {

    private Sesion sesion;
    private File carpeta;
    private Thread procesoSubida, procesoProgreso;

    /**
     * Creates new form practiaSD2GUI
     */
    public PracticaSD2GUI() {

        sesion = new Sesion();

        initComponents();
        jLayeredPaneAlbum.setVisible(false);
        jLayeredPaneOpcional.setVisible(false);
        jLayeredPaneGrupos.setVisible(false);
        jPanelSubSubir.setVisible(true);
        /*if (!(sesion.isPermiso())) {
         for (Component c : jPanelSubSubir.getComponents()) {
         c.setEnabled(false);
         }
         } */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipo = new javax.swing.ButtonGroup();
        buttonGroupPrivacidad = new javax.swing.ButtonGroup();
        buttonGroupSeguridad = new javax.swing.ButtonGroup();
        buttonGroupAlbum = new javax.swing.ButtonGroup();
        buttonGroupGrupos = new javax.swing.ButtonGroup();
        buttonGroupLicencia = new javax.swing.ButtonGroup();
        buttonGroupVisibilidad = new javax.swing.ButtonGroup();
        fileChooserCarpetas = new javax.swing.JFileChooser();
        jLayeredPaneOpcional = new javax.swing.JLayeredPane();
        jPanelOpcional = new javax.swing.JPanel();
        jLabelTitulo1 = new javax.swing.JLabel();
        jLabelAgregarTitulo = new javax.swing.JLabel();
        jTextFieldAgregarTitulo = new javax.swing.JTextField();
        jLabelPreguntaModificar = new javax.swing.JLabel();
        jLabelTipoContenido = new javax.swing.JLabel();
        jLabelPreguntaMotificar2 = new javax.swing.JLabel();
        jLabelAgregarDescripcion = new javax.swing.JLabel();
        jTextFieldAgregarDescripcion = new javax.swing.JTextField();
        jLabelAgregarEtiquetas = new javax.swing.JLabel();
        jTextFieldAgregarEtiquetas = new javax.swing.JTextField();
        jLabelAgregarPersonas = new javax.swing.JLabel();
        jTextFieldAgregarPersonas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonNinguno = new javax.swing.JRadioButton();
        jRadioButtonPublicDomainWork = new javax.swing.JRadioButton();
        jRadioButtonPublicDomainDedication = new javax.swing.JRadioButton();
        jRadioButtonNoComercialCompartir = new javax.swing.JRadioButton();
        jRadioButtonNoComercialCreative = new javax.swing.JRadioButton();
        jRadioButtonCreativeCommons = new javax.swing.JRadioButton();
        jRadioButtonAtribucionCreativeCommons = new javax.swing.JRadioButton();
        jRadioButtonCompartirCreativeCommons = new javax.swing.JRadioButton();
        jRadioButtonNoDerivada = new javax.swing.JRadioButton();
        jButtonVolver = new javax.swing.JButton();
        jLabelVisibilidad = new javax.swing.JLabel();
        jRadioButtonPrivada = new javax.swing.JRadioButton();
        jRadioButtonPublica = new javax.swing.JRadioButton();
        jLayeredPaneSubir = new javax.swing.JLayeredPane();
        jPanelSubir = new javax.swing.JPanel();
        jPanelSubSubir = new javax.swing.JPanel();
        jLabelPrivacidadElegida = new javax.swing.JLabel();
        jCheckBoxAmigos = new javax.swing.JCheckBox();
        jButtonSubir = new javax.swing.JButton();
        jLabelRuta = new javax.swing.JLabel();
        jRadioButtonSegura = new javax.swing.JRadioButton();
        jLabelSeguridad = new javax.swing.JLabel();
        jButtonOpcionales = new javax.swing.JButton();
        jRadioButtonCaptura = new javax.swing.JRadioButton();
        jRadioButtonFoto = new javax.swing.JRadioButton();
        jRadioButtonPrivado = new javax.swing.JRadioButton();
        jRadioButtonPublico = new javax.swing.JRadioButton();
        jLabelPrivacidad = new javax.swing.JLabel();
        jRadioButtonRestringida = new javax.swing.JRadioButton();
        jLabelTipo = new javax.swing.JLabel();
        jCheckBoxFamiliares = new javax.swing.JCheckBox();
        jRadioButtonArte = new javax.swing.JRadioButton();
        jRadioButtonModerada = new javax.swing.JRadioButton();
        jButtonElegir = new javax.swing.JButton();
        jLabelTitulo = new javax.swing.JLabel();
        jLayeredPaneAlbum = new javax.swing.JLayeredPane();
        jPanelAlbum = new javax.swing.JPanel();
        jLabelTituloAlbum = new javax.swing.JLabel();
        jLabelPreguntaAlbum = new javax.swing.JLabel();
        jLabelTipoContenidoAlbum = new javax.swing.JLabel();
        jLabelPreguntaAlbum2 = new javax.swing.JLabel();
        jRadioButtonSiAlbum = new javax.swing.JRadioButton();
        jRadioButtonNoAlbum = new javax.swing.JRadioButton();
        jButtonContinuar = new javax.swing.JButton();
        jButtonFinalizarAlbum = new javax.swing.JButton();
        jPanelSubAlbum = new javax.swing.JPanel();
        jTextFieldTituloAlbum = new javax.swing.JTextField();
        jScrollPaneDescripcionAlbum = new javax.swing.JScrollPane();
        jTextAreaDescripcionAlbum = new javax.swing.JTextArea();
        jLabelDescripcionAlbum = new javax.swing.JLabel();
        jLabelNombreAlbum = new javax.swing.JLabel();
        jLayeredPaneGrupos = new javax.swing.JLayeredPane();
        jPanelGrupos = new javax.swing.JPanel();
        jLabelTituloGrupos = new javax.swing.JLabel();
        jLabelPreguntaGrupos = new javax.swing.JLabel();
        jLabelTipoContenidoGrupos = new javax.swing.JLabel();
        jLabelPreguntaGrupos2 = new javax.swing.JLabel();
        jRadioButtonSiGrupos = new javax.swing.JRadioButton();
        jRadioButtonNoGrupos = new javax.swing.JRadioButton();
        jScrollPaneGrupos = new javax.swing.JScrollPane();
        jListGrupos = new javax.swing.JList();
        jButtonFinalizarGrupos = new javax.swing.JButton();

        fileChooserCarpetas.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        fileChooserCarpetas.setMinimumSize(new java.awt.Dimension(644, 419));
        fileChooserCarpetas.setPreferredSize(new java.awt.Dimension(644, 419));
        fileChooserCarpetas.setVerifyInputWhenFocusTarget(false);
        fileChooserCarpetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserCarpetasActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(815, 370));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPaneOpcional.setAlignmentX(0.0F);
        jLayeredPaneOpcional.setAlignmentY(0.0F);
        jLayeredPaneOpcional.setMaximumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneOpcional.setMinimumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneOpcional.setOpaque(true);

        jPanelOpcional.setAlignmentX(0.0F);
        jPanelOpcional.setAlignmentY(0.0F);
        jPanelOpcional.setDoubleBuffered(false);
        jPanelOpcional.setMaximumSize(new java.awt.Dimension(800, 330));
        jPanelOpcional.setMinimumSize(new java.awt.Dimension(800, 330));
        jPanelOpcional.setPreferredSize(new java.awt.Dimension(800, 330));
        jPanelOpcional.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitulo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTitulo1.setText("Flickr Folder Uploader - Dinesh Metkari");
        jPanelOpcional.add(jLabelTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 12, -1, -1));

        jLabelAgregarTitulo.setText("Add Title");
        jPanelOpcional.add(jLabelAgregarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 93, -1, -1));

        jTextFieldAgregarTitulo.setToolTipText("Optional");
        jTextFieldAgregarTitulo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldAgregarTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAgregarTituloActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jTextFieldAgregarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 90, 249, -1));

        jLabelPreguntaModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPreguntaModificar.setText("Do you want to modify any other data? (It will apply to everything)");
        jPanelOpcional.add(jLabelPreguntaModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 47, -1, -1));

        jLabelTipoContenido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTipoContenido.setText("TypeContent");
        jPanelOpcional.add(jLabelTipoContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 47, -1, -1));

        jLabelPreguntaMotificar2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPreguntaMotificar2.setText(")");
        jPanelOpcional.add(jLabelPreguntaMotificar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 47, -1, -1));

        jLabelAgregarDescripcion.setText("Add description");
        jPanelOpcional.add(jLabelAgregarDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 121, -1, -1));
        jPanelOpcional.add(jTextFieldAgregarDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 121, 247, 38));
        jTextFieldAgregarDescripcion.getAccessibleContext().setAccessibleDescription("Optional");

        jLabelAgregarEtiquetas.setText("Add tags");
        jPanelOpcional.add(jLabelAgregarEtiquetas, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 165, -1, -1));
        jPanelOpcional.add(jTextFieldAgregarEtiquetas, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 165, 247, -1));
        jTextFieldAgregarEtiquetas.getAccessibleContext().setAccessibleDescription("Separate labels with spaces");

        jLabelAgregarPersonas.setText("Add people");
        jPanelOpcional.add(jLabelAgregarPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 199, -1, -1));
        jPanelOpcional.add(jTextFieldAgregarPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 196, 248, -1));
        jTextFieldAgregarPersonas.getAccessibleContext().setAccessibleDescription("Enter name or email address");

        jLabel1.setText("Licenses");
        jPanelOpcional.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 70, -1, -1));

        buttonGroupLicencia.add(jRadioButtonNinguno);
        jRadioButtonNinguno.setMnemonic('0');
        jRadioButtonNinguno.setSelected(true);
        jRadioButtonNinguno.setText("None (All rights reserved))");
        jRadioButtonNinguno.setActionCommand("0");
        jRadioButtonNinguno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNingunoActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jRadioButtonNinguno, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 90, -1, -1));

        buttonGroupLicencia.add(jRadioButtonPublicDomainWork);
        jRadioButtonPublicDomainWork.setMnemonic('\n');
        jRadioButtonPublicDomainWork.setText("Public Domain Mark");
        jRadioButtonPublicDomainWork.setActionCommand("10");
        jPanelOpcional.add(jRadioButtonPublicDomainWork, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 113, -1, -1));

        buttonGroupLicencia.add(jRadioButtonPublicDomainDedication);
        jRadioButtonPublicDomainDedication.setMnemonic('8');
        jRadioButtonPublicDomainDedication.setText("Public Domain Dedication (CC0)");
        jRadioButtonPublicDomainDedication.setActionCommand("9");
        jRadioButtonPublicDomainDedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPublicDomainDedicationActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jRadioButtonPublicDomainDedication, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 136, -1, -1));

        buttonGroupLicencia.add(jRadioButtonNoComercialCompartir);
        jRadioButtonNoComercialCompartir.setMnemonic('1');
        jRadioButtonNoComercialCompartir.setText("Attribution-Noncommercial-Share under the same Creative Commons license");
        jRadioButtonNoComercialCompartir.setActionCommand("1");
        jPanelOpcional.add(jRadioButtonNoComercialCompartir, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 159, -1, -1));

        buttonGroupLicencia.add(jRadioButtonNoComercialCreative);
        jRadioButtonNoComercialCreative.setMnemonic('2');
        jRadioButtonNoComercialCreative.setText("Attribution-Non-commercial Creative Commons");
        jRadioButtonNoComercialCreative.setActionCommand("2");
        jPanelOpcional.add(jRadioButtonNoComercialCreative, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 182, -1, -1));

        buttonGroupLicencia.add(jRadioButtonCreativeCommons);
        jRadioButtonCreativeCommons.setMnemonic('3');
        jRadioButtonCreativeCommons.setText("Creative Commons Attribution-Noncommercial - No Derivs");
        jRadioButtonCreativeCommons.setActionCommand("3");
        jRadioButtonCreativeCommons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCreativeCommonsActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jRadioButtonCreativeCommons, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 208, -1, -1));

        buttonGroupLicencia.add(jRadioButtonAtribucionCreativeCommons);
        jRadioButtonAtribucionCreativeCommons.setMnemonic('4');
        jRadioButtonAtribucionCreativeCommons.setText("Attribution of Creative Commons");
        jRadioButtonAtribucionCreativeCommons.setActionCommand("4");
        jPanelOpcional.add(jRadioButtonAtribucionCreativeCommons, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 231, -1, -1));

        buttonGroupLicencia.add(jRadioButtonCompartirCreativeCommons);
        jRadioButtonCompartirCreativeCommons.setMnemonic('5');
        jRadioButtonCompartirCreativeCommons.setText("Attribution-Share under the same Creative Commons license");
        jRadioButtonCompartirCreativeCommons.setActionCommand("5");
        jPanelOpcional.add(jRadioButtonCompartirCreativeCommons, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 257, -1, -1));

        buttonGroupLicencia.add(jRadioButtonNoDerivada);
        jRadioButtonNoDerivada.setMnemonic('6');
        jRadioButtonNoDerivada.setText("Attribution-Not derived from Creative Commons");
        jRadioButtonNoDerivada.setActionCommand("6");
        jPanelOpcional.add(jRadioButtonNoDerivada, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 280, -1, -1));

        jButtonVolver.setText("Return");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 352, 53));

        jLabelVisibilidad.setText("Visibility in Searches:");
        jPanelOpcional.add(jLabelVisibilidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        buttonGroupVisibilidad.add(jRadioButtonPrivada);
        jRadioButtonPrivada.setText("Private");
        jRadioButtonPrivada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPrivadaActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jRadioButtonPrivada, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        buttonGroupVisibilidad.add(jRadioButtonPublica);
        jRadioButtonPublica.setSelected(true);
        jRadioButtonPublica.setText("Public");
        jRadioButtonPublica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPublicaActionPerformed(evt);
            }
        });
        jPanelOpcional.add(jRadioButtonPublica, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

        javax.swing.GroupLayout jLayeredPaneOpcionalLayout = new javax.swing.GroupLayout(jLayeredPaneOpcional);
        jLayeredPaneOpcional.setLayout(jLayeredPaneOpcionalLayout);
        jLayeredPaneOpcionalLayout.setHorizontalGroup(
            jLayeredPaneOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneOpcionalLayout.createSequentialGroup()
                .addComponent(jPanelOpcional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPaneOpcionalLayout.setVerticalGroup(
            jLayeredPaneOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneOpcionalLayout.createSequentialGroup()
                .addComponent(jPanelOpcional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPaneOpcional.setLayer(jPanelOpcional, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPaneOpcional, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLayeredPaneSubir.setAlignmentX(0.0F);
        jLayeredPaneSubir.setAlignmentY(0.0F);
        jLayeredPaneSubir.setEnabled(false);
        jLayeredPaneSubir.setMaximumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneSubir.setMinimumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneSubir.setOpaque(true);

        jPanelSubir.setAlignmentX(0.0F);
        jPanelSubir.setAlignmentY(0.0F);
        jPanelSubir.setMaximumSize(new java.awt.Dimension(800, 330));
        jPanelSubir.setMinimumSize(new java.awt.Dimension(800, 330));
        jPanelSubir.setPreferredSize(new java.awt.Dimension(800, 330));
        jPanelSubir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelSubSubir.setOpaque(false);
        jPanelSubSubir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelPrivacidadElegida.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelPrivacidadElegida.setForeground(java.awt.Color.green);
        jLabelPrivacidadElegida.setText("Visible to all");
        jPanelSubSubir.add(jLabelPrivacidadElegida, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, -1, -1));

        jCheckBoxAmigos.setText("Your friends");
        jCheckBoxAmigos.setEnabled(false);
        jCheckBoxAmigos.setOpaque(false);
        jCheckBoxAmigos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAmigosActionPerformed(evt);
            }
        });
        jCheckBoxAmigos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCheckBoxAmigosPropertyChange(evt);
            }
        });
        jPanelSubSubir.add(jCheckBoxAmigos, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 133, -1, -1));

        jButtonSubir.setText("Confirm and Upload");
        jButtonSubir.setDoubleBuffered(true);
        jButtonSubir.setOpaque(false);
        jButtonSubir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSubirMouseClicked(evt);
            }
        });
        jButtonSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubirActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jButtonSubir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 252, 780, 37));

        jLabelRuta.setText("Unelected Path");
        jPanelSubSubir.add(jLabelRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 47, -1, -1));

        buttonGroupSeguridad.add(jRadioButtonSegura);
        jRadioButtonSegura.setMnemonic('1');
        jRadioButtonSegura.setText("Safe");
        jRadioButtonSegura.setActionCommand("1");
        jRadioButtonSegura.setOpaque(false);
        jRadioButtonSegura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSeguraActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jRadioButtonSegura, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 100, -1, -1));

        jLabelSeguridad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSeguridad.setText("Security");
        jPanelSubSubir.add(jLabelSeguridad, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 80, -1, -1));

        jButtonOpcionales.setText("Optional details");
        jButtonOpcionales.setOpaque(false);
        jButtonOpcionales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpcionalesActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jButtonOpcionales, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 490, 37));

        buttonGroupTipo.add(jRadioButtonCaptura);
        jRadioButtonCaptura.setMnemonic('2');
        jRadioButtonCaptura.setText("Screenshot");
        jRadioButtonCaptura.setActionCommand("2");
        jRadioButtonCaptura.setOpaque(false);
        jRadioButtonCaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCapturaActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jRadioButtonCaptura, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        buttonGroupTipo.add(jRadioButtonFoto);
        jRadioButtonFoto.setMnemonic('1');
        jRadioButtonFoto.setSelected(true);
        jRadioButtonFoto.setText("Photo");
        jRadioButtonFoto.setActionCommand("1");
        jRadioButtonFoto.setOpaque(false);
        jRadioButtonFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFotoActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jRadioButtonFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        buttonGroupPrivacidad.add(jRadioButtonPrivado);
        jRadioButtonPrivado.setText("Only You (private)");
        jRadioButtonPrivado.setOpaque(false);
        jRadioButtonPrivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPrivadoActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jRadioButtonPrivado, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 107, -1, -1));

        buttonGroupPrivacidad.add(jRadioButtonPublico);
        jRadioButtonPublico.setSelected(true);
        jRadioButtonPublico.setText("Any Person (public)");
        jRadioButtonPublico.setOpaque(false);
        jRadioButtonPublico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPublicoActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jRadioButtonPublico, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 182, -1, -1));

        jLabelPrivacidad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPrivacidad.setText("Privacy");
        jPanelSubSubir.add(jLabelPrivacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 67, -1, -1));

        buttonGroupSeguridad.add(jRadioButtonRestringida);
        jRadioButtonRestringida.setMnemonic('3');
        jRadioButtonRestringida.setText("Restricted");
        jRadioButtonRestringida.setActionCommand("3");
        jRadioButtonRestringida.setOpaque(false);
        jPanelSubSubir.add(jRadioButtonRestringida, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 160, -1, -1));

        jLabelTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTipo.setText("Type of content");
        jPanelSubSubir.add(jLabelTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jCheckBoxFamiliares.setText("Your relatives");
        jCheckBoxFamiliares.setEnabled(false);
        jCheckBoxFamiliares.setOpaque(false);
        jCheckBoxFamiliares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFamiliaresActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jCheckBoxFamiliares, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 156, -1, -1));

        buttonGroupTipo.add(jRadioButtonArte);
        jRadioButtonArte.setMnemonic('3');
        jRadioButtonArte.setText("Art / Illustration");
        jRadioButtonArte.setActionCommand("3");
        jRadioButtonArte.setOpaque(false);
        jPanelSubSubir.add(jRadioButtonArte, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        buttonGroupSeguridad.add(jRadioButtonModerada);
        jRadioButtonModerada.setMnemonic('2');
        jRadioButtonModerada.setSelected(true);
        jRadioButtonModerada.setText("Moderate");
        jRadioButtonModerada.setActionCommand("2");
        jRadioButtonModerada.setOpaque(false);
        jPanelSubSubir.add(jRadioButtonModerada, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 130, -1, -1));

        jButtonElegir.setText("Choose Folder to Upload");
        jButtonElegir.setOpaque(false);
        jButtonElegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonElegirActionPerformed(evt);
            }
        });
        jPanelSubSubir.add(jButtonElegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 780, 37));

        jPanelSubir.add(jPanelSubSubir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 800, 300));

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo.setText("Flickr Folder Uploader - Dinesh Metkari");
        jPanelSubir.add(jLabelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 780, 30));

        javax.swing.GroupLayout jLayeredPaneSubirLayout = new javax.swing.GroupLayout(jLayeredPaneSubir);
        jLayeredPaneSubir.setLayout(jLayeredPaneSubirLayout);
        jLayeredPaneSubirLayout.setHorizontalGroup(
            jLayeredPaneSubirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSubir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jLayeredPaneSubirLayout.setVerticalGroup(
            jLayeredPaneSubirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSubir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jLayeredPaneSubir.setLayer(jPanelSubir, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPaneSubir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLayeredPaneAlbum.setAlignmentX(0.0F);
        jLayeredPaneAlbum.setAlignmentY(0.0F);
        jLayeredPaneAlbum.setAutoscrolls(true);
        jLayeredPaneAlbum.setMaximumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneAlbum.setMinimumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneAlbum.setOpaque(true);

        jPanelAlbum.setAlignmentX(0.0F);
        jPanelAlbum.setAlignmentY(0.0F);
        jPanelAlbum.setMaximumSize(new java.awt.Dimension(800, 330));
        jPanelAlbum.setMinimumSize(new java.awt.Dimension(800, 330));
        jPanelAlbum.setPreferredSize(new java.awt.Dimension(800, 330));

        jLabelTituloAlbum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTituloAlbum.setText("Flickr Folder Uploader - Dinesh Metkari");

        jLabelPreguntaAlbum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPreguntaAlbum.setText("Do you want to add these");

        jLabelTipoContenidoAlbum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTipoContenidoAlbum.setText("TypeContent");

        jLabelPreguntaAlbum2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPreguntaAlbum2.setText("to an album?");

        buttonGroupAlbum.add(jRadioButtonSiAlbum);
        jRadioButtonSiAlbum.setText("Yes");
        jRadioButtonSiAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSiAlbumActionPerformed(evt);
            }
        });

        buttonGroupAlbum.add(jRadioButtonNoAlbum);
        jRadioButtonNoAlbum.setSelected(true);
        jRadioButtonNoAlbum.setText("No");
        jRadioButtonNoAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNoAlbumActionPerformed(evt);
            }
        });

        jButtonContinuar.setText("Continue");
        jButtonContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinuarActionPerformed(evt);
            }
        });

        jButtonFinalizarAlbum.setText("Finalize");
        jButtonFinalizarAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarAlbumActionPerformed(evt);
            }
        });

        jTextFieldTituloAlbum.setText("Selected folder");
        jTextFieldTituloAlbum.setEnabled(false);

        jScrollPaneDescripcionAlbum.setEnabled(false);

        jTextAreaDescripcionAlbum.setColumns(20);
        jTextAreaDescripcionAlbum.setRows(5);
        jTextAreaDescripcionAlbum.setEnabled(false);
        jScrollPaneDescripcionAlbum.setViewportView(jTextAreaDescripcionAlbum);
        jTextAreaDescripcionAlbum.getAccessibleContext().setAccessibleParent(jPanelSubAlbum);

        jLabelDescripcionAlbum.setText("Album description:");
        jLabelDescripcionAlbum.setEnabled(false);

        jLabelNombreAlbum.setText("Title of the Album:");
        jLabelNombreAlbum.setEnabled(false);

        javax.swing.GroupLayout jPanelSubAlbumLayout = new javax.swing.GroupLayout(jPanelSubAlbum);
        jPanelSubAlbum.setLayout(jPanelSubAlbumLayout);
        jPanelSubAlbumLayout.setHorizontalGroup(
            jPanelSubAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSubAlbumLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(jPanelSubAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDescripcionAlbum)
                    .addComponent(jLabelNombreAlbum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSubAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldTituloAlbum)
                    .addComponent(jScrollPaneDescripcionAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSubAlbumLayout.setVerticalGroup(
            jPanelSubAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSubAlbumLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelSubAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreAlbum)
                    .addComponent(jTextFieldTituloAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelSubAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSubAlbumLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPaneDescripcionAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSubAlbumLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabelDescripcionAlbum)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelAlbumLayout = new javax.swing.GroupLayout(jPanelAlbum);
        jPanelAlbum.setLayout(jPanelAlbumLayout);
        jPanelAlbumLayout.setHorizontalGroup(
            jPanelAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlbumLayout.createSequentialGroup()
                .addGroup(jPanelAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAlbumLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButtonFinalizarAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAlbumLayout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabelPreguntaAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTipoContenidoAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPreguntaAlbum2))
                    .addGroup(jPanelAlbumLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabelTituloAlbum)))
                .addGap(11, 11, 11))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAlbumLayout.createSequentialGroup()
                .addComponent(jPanelSubAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelAlbumLayout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(jRadioButtonSiAlbum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonNoAlbum)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAlbumLayout.setVerticalGroup(
            jPanelAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlbumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTituloAlbum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPreguntaAlbum)
                    .addComponent(jLabelTipoContenidoAlbum)
                    .addComponent(jLabelPreguntaAlbum2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSiAlbum)
                    .addComponent(jRadioButtonNoAlbum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelSubAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanelAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonContinuar, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(jButtonFinalizarAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jLayeredPaneAlbumLayout = new javax.swing.GroupLayout(jLayeredPaneAlbum);
        jLayeredPaneAlbum.setLayout(jLayeredPaneAlbumLayout);
        jLayeredPaneAlbumLayout.setHorizontalGroup(
            jLayeredPaneAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneAlbumLayout.createSequentialGroup()
                .addComponent(jPanelAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPaneAlbumLayout.setVerticalGroup(
            jLayeredPaneAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneAlbumLayout.createSequentialGroup()
                .addComponent(jPanelAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPaneAlbum.setLayer(jPanelAlbum, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPaneAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLayeredPaneGrupos.setAlignmentX(0.0F);
        jLayeredPaneGrupos.setAlignmentY(0.0F);
        jLayeredPaneGrupos.setMaximumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneGrupos.setMinimumSize(new java.awt.Dimension(800, 330));
        jLayeredPaneGrupos.setOpaque(true);

        jPanelGrupos.setAlignmentX(0.0F);
        jPanelGrupos.setAlignmentY(0.0F);
        jPanelGrupos.setMaximumSize(new java.awt.Dimension(800, 330));
        jPanelGrupos.setMinimumSize(new java.awt.Dimension(800, 330));
        jPanelGrupos.setPreferredSize(new java.awt.Dimension(800, 330));

        jLabelTituloGrupos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTituloGrupos.setText("Flickr Folder Uploader - Dinesh Metkari");

        jLabelPreguntaGrupos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPreguntaGrupos.setText("Do you want to add these");

        jLabelTipoContenidoGrupos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTipoContenidoGrupos.setText("TypeContent");

        jLabelPreguntaGrupos2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPreguntaGrupos2.setText("to a mural (pool) of a group?");

        buttonGroupGrupos.add(jRadioButtonSiGrupos);
        jRadioButtonSiGrupos.setText("Si");
        jRadioButtonSiGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSiGruposActionPerformed(evt);
            }
        });

        buttonGroupGrupos.add(jRadioButtonNoGrupos);
        jRadioButtonNoGrupos.setSelected(true);
        jRadioButtonNoGrupos.setText("No");
        jRadioButtonNoGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNoGruposActionPerformed(evt);
            }
        });

        jListGrupos.setModel(new DefaultListModel ());
        jListGrupos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListGrupos.setEnabled(false);
        jScrollPaneGrupos.setViewportView(jListGrupos);

        jButtonFinalizarGrupos.setText("Finalize");
        jButtonFinalizarGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarGruposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelGruposLayout = new javax.swing.GroupLayout(jPanelGrupos);
        jPanelGrupos.setLayout(jPanelGruposLayout);
        jPanelGruposLayout.setHorizontalGroup(
            jPanelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGruposLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonSiGrupos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonNoGrupos)
                .addGap(356, 356, 356))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGruposLayout.createSequentialGroup()
                .addGroup(jPanelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelGruposLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonFinalizarGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelGruposLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPaneGrupos))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelGruposLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelGruposLayout.createSequentialGroup()
                                .addComponent(jLabelPreguntaGrupos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTipoContenidoGrupos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPreguntaGrupos2))
                            .addComponent(jLabelTituloGrupos))
                        .addGap(0, 172, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        jPanelGruposLayout.setVerticalGroup(
            jPanelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTituloGrupos)
                .addGap(18, 18, 18)
                .addGroup(jPanelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPreguntaGrupos)
                    .addComponent(jLabelTipoContenidoGrupos)
                    .addComponent(jLabelPreguntaGrupos2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSiGrupos)
                    .addComponent(jRadioButtonNoGrupos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFinalizarGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jLayeredPaneGruposLayout = new javax.swing.GroupLayout(jLayeredPaneGrupos);
        jLayeredPaneGrupos.setLayout(jLayeredPaneGruposLayout);
        jLayeredPaneGruposLayout.setHorizontalGroup(
            jLayeredPaneGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneGruposLayout.createSequentialGroup()
                .addComponent(jPanelGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 260, Short.MAX_VALUE))
        );
        jLayeredPaneGruposLayout.setVerticalGroup(
            jLayeredPaneGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneGruposLayout.createSequentialGroup()
                .addComponent(jPanelGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 105, Short.MAX_VALUE))
        );
        jLayeredPaneGrupos.setLayer(jPanelGrupos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPaneGrupos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAgregarTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAgregarTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAgregarTituloActionPerformed

    private void jRadioButtonPublicDomainDedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPublicDomainDedicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonPublicDomainDedicationActionPerformed

    private void jRadioButtonCreativeCommonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCreativeCommonsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonCreativeCommonsActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        jLayeredPaneOpcional.setVisible(false);
        jLayeredPaneSubir.setVisible(true);
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jRadioButtonPrivadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPrivadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonPrivadaActionPerformed

    private void jRadioButtonPublicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPublicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonPublicaActionPerformed

    private void fileChooserCarpetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserCarpetasActionPerformed

    }//GEN-LAST:event_fileChooserCarpetasActionPerformed

    private void jRadioButtonSiGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSiGruposActionPerformed
        jListGrupos.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonSiGruposActionPerformed

    private void jRadioButtonNoGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNoGruposActionPerformed
        jListGrupos.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonNoGruposActionPerformed

    private void jRadioButtonNingunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNingunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonNingunoActionPerformed

    private void jButtonFinalizarAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarAlbumActionPerformed
        if (jRadioButtonSiAlbum.isSelected() && ((jTextFieldTituloAlbum.getText().isEmpty()) || (jTextAreaDescripcionAlbum.getText().isEmpty()))) {
            StringBuilder error = new StringBuilder();
            if (jTextFieldTituloAlbum.getText().isEmpty()) {
                error.append("Album title has not been entered \\ n");
            }
            if (jTextAreaDescripcionAlbum.getText().isEmpty()) {
                error.append("Album description has not been introduced \\ n");
            }
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, error, "Error creating the album.", JOptionPane.ERROR_MESSAGE);

        } else {
            if (jRadioButtonSiAlbum.isSelected()) {
                try {
                    sesion.createAlbum(jTextFieldTituloAlbum.getText(), jTextAreaDescripcionAlbum.getText());
                } catch (FlickrException ex) {
                    Logger.getLogger(PracticaSD2GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            System.exit(0);
        }
    }//GEN-LAST:event_jButtonFinalizarAlbumActionPerformed

    private void jButtonContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinuarActionPerformed
        if (jRadioButtonSiAlbum.isSelected() && ((jTextFieldTituloAlbum.getText().isEmpty()) || (jTextAreaDescripcionAlbum.getText().isEmpty()))) {
            StringBuilder error = new StringBuilder();
            if (jTextFieldTituloAlbum.getText().isEmpty()) {
                error.append("The title of the album has not been entered\n");
            }
            if (jTextAreaDescripcionAlbum.getText().isEmpty()) {
                error.append("The album description has not been entered\n");
            }
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, error, "Error creating the album.", JOptionPane.ERROR_MESSAGE);

        } else {
            if (jRadioButtonSiAlbum.isSelected()) {
                try {
                    sesion.createAlbum(jTextFieldTituloAlbum.getText(), jTextAreaDescripcionAlbum.getText());
                } catch (FlickrException ex) {
                    Logger.getLogger(PracticaSD2GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            RequestContext.getRequestContext().setAuth(sesion.getMiFlickr().getAuth());
            jLayeredPaneAlbum.setVisible(false);
            DefaultListModel model = (DefaultListModel) jListGrupos.getModel();
            jListGrupos.setCellRenderer(new DefaultListCellRenderer() {

                @Override
                public Component getListCellRendererComponent(JList jlist, Object e, int i, boolean bln, boolean bln1) {
                    Component c = super.getListCellRendererComponent(jlist, e, i, bln, bln1);
                    setText(((Group) e).getName());
                    return c;
                }
            });
            try {
                for (Group g : sesion.getMiFlickr().getPoolsInterface().getGroups()) {
                    model.addElement(g);
                }
            } catch (FlickrException ex) {
                Logger.getLogger(PracticaSD2GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            jListGrupos.repaint();
            jLayeredPaneGrupos.setVisible(true);
        }
    }//GEN-LAST:event_jButtonContinuarActionPerformed

    private void jRadioButtonSiAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSiAlbumActionPerformed
        for (Component c : jPanelSubAlbum.getComponents()) {
            c.setEnabled(true);
            jTextAreaDescripcionAlbum.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButtonSiAlbumActionPerformed

    private void jRadioButtonNoAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNoAlbumActionPerformed
        for (Component c : jPanelSubAlbum.getComponents()) {
            c.setEnabled(false);
            jTextAreaDescripcionAlbum.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButtonNoAlbumActionPerformed

    private void jButtonFinalizarGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarGruposActionPerformed
        if (jRadioButtonSiGrupos.isSelected()) {
            Group grupo = (Group) jListGrupos.getSelectedValue();
            if (grupo != null) {
                try {
                    sesion.addToPool(grupo.getId());
                } catch (FlickrException ex) {
                   // Logger.getLogger(PracticaSD2GUI.class.getName()).log(Level.SEVERE, null, ex);
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, "The selected group is not compatible with your files: " + ex.toString(), "Error in selecting the group", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, "No group selected.", "Error selecting the pool.", JOptionPane.ERROR_MESSAGE);
            }
        }else{
           System.exit(0); 
        }
        
    }//GEN-LAST:event_jButtonFinalizarGruposActionPerformed

    private void jButtonElegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonElegirActionPerformed
        int returnVal = fileChooserCarpetas.showOpenDialog(jPanelSubir);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            carpeta = fileChooserCarpetas.getSelectedFile();
            jLabelRuta.setText(carpeta.getAbsolutePath());
        } else {

        }
    }//GEN-LAST:event_jButtonElegirActionPerformed

    private void jCheckBoxFamiliaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFamiliaresActionPerformed
        jLabelPrivacidadElegida.setForeground(Color.YELLOW);
        if (jCheckBoxAmigos.isSelected() && jCheckBoxFamiliares.isSelected()) {
            jLabelPrivacidadElegida.setText("Visible to your friends and family.");
        } else {
            if (jCheckBoxFamiliares.isSelected() && !jCheckBoxAmigos.isSelected()) {
                jLabelPrivacidadElegida.setText("Visible to your family.");
            } else if (jCheckBoxAmigos.isSelected() && !jCheckBoxFamiliares.isSelected()) {
                jLabelPrivacidadElegida.setText("Visible to your friends.");
            } else {
                jRadioButtonPrivadoActionPerformed(null);
            }
        }
    }//GEN-LAST:event_jCheckBoxFamiliaresActionPerformed

    private void jRadioButtonPublicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPublicoActionPerformed
        jLabelPrivacidadElegida.setText("Visible to all");
        jLabelPrivacidadElegida.setForeground(Color.GREEN);
        jCheckBoxAmigos.setSelected(false);
        jCheckBoxFamiliares.setSelected(false);
        jCheckBoxAmigos.setEnabled(false);
        jCheckBoxFamiliares.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonPublicoActionPerformed

    private void jRadioButtonPrivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPrivadoActionPerformed
        jLabelPrivacidadElegida.setText("Only visible to you");
        jLabelPrivacidadElegida.setForeground(Color.RED);
        jCheckBoxAmigos.setSelected(false);
        jCheckBoxFamiliares.setSelected(false);
        jCheckBoxAmigos.setEnabled(true);
        jCheckBoxFamiliares.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonPrivadoActionPerformed

    private void jRadioButtonFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFotoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonFotoActionPerformed

    private void jRadioButtonCapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCapturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonCapturaActionPerformed

    private void jButtonOpcionalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpcionalesActionPerformed
        jLayeredPaneSubir.setVisible(false);
        jLayeredPaneOpcional.setVisible(true);
    }//GEN-LAST:event_jButtonOpcionalesActionPerformed

    private void jRadioButtonSeguraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSeguraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonSeguraActionPerformed

    private void jButtonSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirActionPerformed
        for (Component c : jPanelSubSubir.getComponents()) {
            c.setEnabled(false);
        }
        String seguridad = String.valueOf(buttonGroupSeguridad.getSelection().getActionCommand());
        String tipoContenido = String.valueOf(buttonGroupTipo.getSelection().getActionCommand());
        int privacidad;
        if (jRadioButtonPrivado.isSelected()) {
            privacidad = 5;
        } else {
            privacidad = 1;
            if (jCheckBoxAmigos.isSelected() && jCheckBoxFamiliares.isSelected()) {
                privacidad = 4;
            } else if (jCheckBoxFamiliares.isSelected()) {
                privacidad = 3;
            } else if (jCheckBoxAmigos.isSelected()) {
                privacidad = 2;
            }
        }
        final MetaData metaData = new MetaData(carpeta, seguridad, tipoContenido, privacidad);
        if (!jTextFieldAgregarTitulo.getText().isEmpty()) {
            metaData.setTitulo(jTextFieldAgregarTitulo.getText());
        }
        if (!jTextFieldAgregarDescripcion.getText().isEmpty()) {
            metaData.setDescripcion(jTextFieldAgregarDescripcion.getText());
        }
        if (!jTextFieldAgregarEtiquetas.getText().isEmpty()) {
            String[] etiquetas = jTextFieldAgregarEtiquetas.getText().split(" ");
            for (String s : etiquetas) {
                metaData.getEtiquetas().add(s);
            }
        }
        if (!jTextFieldAgregarPersonas.getText().isEmpty()) {
            String[] personas = jTextFieldAgregarPersonas.getText().split(" ");
            for (String s : personas) {
                metaData.getPersonas().add(s);
            }
        }
        metaData.setLicencia(Integer.valueOf(buttonGroupLicencia.getSelection().getActionCommand()));
        final ProgressMonitor progressMonitor = new ProgressMonitor(this,
                "Running a Long Task",
                "", 0, 100);
        int numArchivos = 0;

        for (File f : metaData.getCarpeta().listFiles()) {
            String name = f.getName();
            if (Sesion.isValidSuffix(name)) {
                numArchivos++;
            }

        }
        final int numArchivosFinal = numArchivos;
        progressMonitor.setProgress(0);
        final UploadTask task = new Sesion.UploadTask(sesion, metaData);
        task.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if ("completados" == evt.getPropertyName()) {
                    int completados = (Integer) evt.getNewValue();
                    progressMonitor.setProgress(completados);
                    progressMonitor.setMaximum(numArchivosFinal * 2);
                    String message;
                    if (completados <= (numArchivosFinal)) {
                        message
                                = String.format("Prepared " + completados + " from " + numArchivosFinal + " files.");
                    } else {
                        message
                                = String.format("Uploads " + completados / 2 + " from " + numArchivosFinal + " files.");
                    }
                    progressMonitor.setNote(message);
                    if (progressMonitor.isCanceled() || task.isDone()) {
                        Toolkit.getDefaultToolkit().beep();
                        if (progressMonitor.isCanceled()) {
                            task.cancel(true);
                            progressMonitor.setNote("Upload Canceled.");
                            for (Component c : jPanelSubSubir.getComponents()) {
                                c.setEnabled(true);
                            }
                        } else {
                            progressMonitor.close();
                            jLayeredPaneSubir.setVisible(false);
                            switch (metaData.getTipoContenido()) {
                                case "1":
                                    jLabelTipoContenidoAlbum.setText("Photos");
                                    jLabelTipoContenidoGrupos.setText("Photos");
                                    break;
                                case "2":
                                    jLabelTipoContenidoAlbum.setText("Screenshots");
                                    jLabelTipoContenidoGrupos.setText("Screenshots");
                                    break;
                                default:
                                    jLabelTipoContenidoAlbum.setText("Art / Illustrations");
                                    jLabelTipoContenidoGrupos.setText("Art / Illustrations");
                                    break;
                            }
                            jTextFieldTituloAlbum.setText(metaData.getCarpeta().getName());
                            jLayeredPaneAlbum.setVisible(true);

                        }
                    }
                } else if ("error" == evt.getPropertyName()) {
                    String error = (String) evt.getNewValue();
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(jPanelAlbum, error, "Error uploading files.", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        task.execute();
        //ProgressMonitorDemo monitor = new ProgressMonitorDemo(metaData, sesion);



    }//GEN-LAST:event_jButtonSubirActionPerformed

    private void jCheckBoxAmigosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCheckBoxAmigosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAmigosPropertyChange

    private void jCheckBoxAmigosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAmigosActionPerformed
        jLabelPrivacidadElegida.setForeground(Color.YELLOW);
        if (jCheckBoxAmigos.isSelected() && jCheckBoxFamiliares.isSelected()) {
            jLabelPrivacidadElegida.setText("Visible to your friends and family.");
        } else {
            if (jCheckBoxAmigos.isSelected() && !jCheckBoxFamiliares.isSelected()) {
                jLabelPrivacidadElegida.setText("Visible to your friends.");
            } else if (jCheckBoxFamiliares.isSelected() && !jCheckBoxAmigos.isSelected()) {
                jLabelPrivacidadElegida.setText("Visible to your family.");

            } else {
                jRadioButtonPrivadoActionPerformed(null);
            }
        }
    }//GEN-LAST:event_jCheckBoxAmigosActionPerformed

    private void jButtonSubirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSubirMouseClicked

    }//GEN-LAST:event_jButtonSubirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticaSD2GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticaSD2GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticaSD2GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticaSD2GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticaSD2GUI().setVisible(true);
            }
        });
    }

    // <editor-fold desc="generated code">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupAlbum;
    private javax.swing.ButtonGroup buttonGroupGrupos;
    private javax.swing.ButtonGroup buttonGroupLicencia;
    private javax.swing.ButtonGroup buttonGroupPrivacidad;
    private javax.swing.ButtonGroup buttonGroupSeguridad;
    private javax.swing.ButtonGroup buttonGroupTipo;
    private javax.swing.ButtonGroup buttonGroupVisibilidad;
    private javax.swing.JFileChooser fileChooserCarpetas;
    private javax.swing.JButton jButtonContinuar;
    private javax.swing.JButton jButtonElegir;
    private javax.swing.JButton jButtonFinalizarAlbum;
    private javax.swing.JButton jButtonFinalizarGrupos;
    private javax.swing.JButton jButtonOpcionales;
    private javax.swing.JButton jButtonSubir;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JCheckBox jCheckBoxAmigos;
    private javax.swing.JCheckBox jCheckBoxFamiliares;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAgregarDescripcion;
    private javax.swing.JLabel jLabelAgregarEtiquetas;
    private javax.swing.JLabel jLabelAgregarPersonas;
    private javax.swing.JLabel jLabelAgregarTitulo;
    private javax.swing.JLabel jLabelDescripcionAlbum;
    private javax.swing.JLabel jLabelNombreAlbum;
    private javax.swing.JLabel jLabelPreguntaAlbum;
    private javax.swing.JLabel jLabelPreguntaAlbum2;
    private javax.swing.JLabel jLabelPreguntaGrupos;
    private javax.swing.JLabel jLabelPreguntaGrupos2;
    private javax.swing.JLabel jLabelPreguntaModificar;
    private javax.swing.JLabel jLabelPreguntaMotificar2;
    private javax.swing.JLabel jLabelPrivacidad;
    private javax.swing.JLabel jLabelPrivacidadElegida;
    private javax.swing.JLabel jLabelRuta;
    private javax.swing.JLabel jLabelSeguridad;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JLabel jLabelTipoContenido;
    private javax.swing.JLabel jLabelTipoContenidoAlbum;
    private javax.swing.JLabel jLabelTipoContenidoGrupos;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelTitulo1;
    private javax.swing.JLabel jLabelTituloAlbum;
    private javax.swing.JLabel jLabelTituloGrupos;
    private javax.swing.JLabel jLabelVisibilidad;
    private javax.swing.JLayeredPane jLayeredPaneAlbum;
    private javax.swing.JLayeredPane jLayeredPaneGrupos;
    private javax.swing.JLayeredPane jLayeredPaneOpcional;
    private javax.swing.JLayeredPane jLayeredPaneSubir;
    private javax.swing.JList jListGrupos;
    private javax.swing.JPanel jPanelAlbum;
    private javax.swing.JPanel jPanelGrupos;
    private javax.swing.JPanel jPanelOpcional;
    private javax.swing.JPanel jPanelSubAlbum;
    private javax.swing.JPanel jPanelSubSubir;
    private javax.swing.JPanel jPanelSubir;
    private javax.swing.JRadioButton jRadioButtonArte;
    private javax.swing.JRadioButton jRadioButtonAtribucionCreativeCommons;
    private javax.swing.JRadioButton jRadioButtonCaptura;
    private javax.swing.JRadioButton jRadioButtonCompartirCreativeCommons;
    private javax.swing.JRadioButton jRadioButtonCreativeCommons;
    private javax.swing.JRadioButton jRadioButtonFoto;
    private javax.swing.JRadioButton jRadioButtonModerada;
    private javax.swing.JRadioButton jRadioButtonNinguno;
    private javax.swing.JRadioButton jRadioButtonNoAlbum;
    private javax.swing.JRadioButton jRadioButtonNoComercialCompartir;
    private javax.swing.JRadioButton jRadioButtonNoComercialCreative;
    private javax.swing.JRadioButton jRadioButtonNoDerivada;
    private javax.swing.JRadioButton jRadioButtonNoGrupos;
    private javax.swing.JRadioButton jRadioButtonPrivada;
    private javax.swing.JRadioButton jRadioButtonPrivado;
    private javax.swing.JRadioButton jRadioButtonPublicDomainDedication;
    private javax.swing.JRadioButton jRadioButtonPublicDomainWork;
    private javax.swing.JRadioButton jRadioButtonPublica;
    private javax.swing.JRadioButton jRadioButtonPublico;
    private javax.swing.JRadioButton jRadioButtonRestringida;
    private javax.swing.JRadioButton jRadioButtonSegura;
    private javax.swing.JRadioButton jRadioButtonSiAlbum;
    private javax.swing.JRadioButton jRadioButtonSiGrupos;
    private javax.swing.JScrollPane jScrollPaneDescripcionAlbum;
    private javax.swing.JScrollPane jScrollPaneGrupos;
    private javax.swing.JTextArea jTextAreaDescripcionAlbum;
    private javax.swing.JTextField jTextFieldAgregarDescripcion;
    private javax.swing.JTextField jTextFieldAgregarEtiquetas;
    private javax.swing.JTextField jTextFieldAgregarPersonas;
    private javax.swing.JTextField jTextFieldAgregarTitulo;
    private javax.swing.JTextField jTextFieldTituloAlbum;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
